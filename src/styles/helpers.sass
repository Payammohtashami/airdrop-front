// media queries
=w
    @media only screen and (max-width: "1419px")
        @content
=x
    @media only screen and (max-width: "1339px")
        @content
=d
    @media only screen and (max-width: "1179px")
        @content
=t
    @media only screen and (max-width: "1023px")
        @content
=m
    @media only screen and (max-width: "768px")
        @content
=a
    @media only screen and (max-width: "639px")
        @content
=s
    @media only screen and (max-width: "474px")
        @content

// fonts
=dm-sans
    font-family: 'DM Sans', sans-serif
    +rtl-body
        font-family: fa, sans-serif
    +rtl
        font-family: fa, sans-serif

=poppins
    font-family: 'Poppins', sans-serif
    +rtl-body
        font-family: fa, sans-serif
    +rtl
        font-family: fa, sans-serif

=font-style
    direction: ltr
    display: table-cell
    vertical-align: inherit
=layout
    padding-right: 50px
    padding-left: 50px

@function toRem($value)
    $remValue: ($value / 16) + rem
    @return $remValue
@mixin button($bg,$size,$weight ,$border-color)
    background: $bg
    font-size: $size+px
    font-weight: $weight
    border: 1px solid $border-color
    border-radius: 8px
    line-height: 20px


// color Pallet

$bg: #FCFCFC
$primary: #84DCC6
$dark-green: #0CB09D
$green2: #51B89E
$violet: #9381FF
$orange: #FF686B
$yellow: #F6CB2B
$blue: #2F9FDB        
$lightBlue: #B5E1FF  
$darkBlue: #2672D2      
$red: #F42020
$text: #525252
$border: #F1F1F1
$border2: #F4F4F4
$b2: #F2F2F2
$d1: #000
$d2: #232323
$white: #FFF
$green: #39DA5D

// typography
=body-1
    font-size: 24px
    line-height: (32/24)
    letter-spacing: -.01em

=body-bold-1
    font-size: 24px
    line-height: (32/24)
    font-weight: 600
    letter-spacing: -.01em

=body-2
    font-size: 16px
    line-height: (24/16)

=body-bold-2
    font-size: 16px
    line-height: (24/16)
    font-weight: 500

=caption-1
    font-size: 13px
    line-height: (24/14)

=caption-bold-1
    font-size: 13px
    line-height: (24/14)
    font-weight: 500

=caption-2
    font-size: 12px
    line-height: (20/12)

=caption-bold-2
    font-size: 12px
    line-height: (20/12)
    font-weight: 600

=caption-3
    font-size: 10px
    line-height: (16/10)

=hairline-1
    font-size: 16px
    line-height: 1
    font-weight: 600
    text-transform: uppercase

=hairline-2
    font-size: 12px
    line-height: 1
    font-weight: 600
    text-transform: uppercase

=button-1
    +dm-sans
    font-size: 16px
    font-weight: 600
    line-height: 1

=button-2
    +dm-sans
    font-size: 13px
    line-height: (16/14)
    font-weight: 600

//triangle
=arr($width, $height, $bg, $direction)
    width: 0px
    height: 0px
    border-style: solid
    @if $direction == t
        border-width: 0 $width / 2 + px $height + px $width / 2 + px
        border-color: transparent transparent $bg transparent
    @if $direction == r
        border-width: $height / 2 + px 0 $height / 2 + px $width + px
        border-color: transparent transparent transparent $bg
    @if $direction == b
        border-width: $height + px $width / 2 + px 0 $width / 2 + px
        border-color: $bg transparent transparent transparent
    @if $direction == l
        border-width: $height / 2 + px $width + px $height / 2 + px 0
        border-color: transparent $bg transparent transparent
    @if $direction == tl
        border-width: $height + px $width + px 0 0
        border-color: $bg transparent transparent transparent
    @if $direction == tr
        border-width: 0 $width + px $height + px 0
        border-color: transparent $bg transparent transparent
    @if $direction == br
        border-width: 0 0 $height + px $width + px
        border-color: transparent transparent $bg transparent
    @if $direction == bl
        border-width: $width + px 0 0 $height + px
        border-color: transparent transparent transparent $bg

// placeholder
=placeholder
    &::placeholder
        @content

// media query width
=r($width)
    @media only screen and (max-width: $width+ "px")
        @content

=rmin($width)
    @media only screen and (min-width: $width+ "px")
        @content

=text-overflow
    overflow: hidden
    text-overflow: ellipsis
    white-space: nowrap

// theme
=dark
    @at-root :global(.dark-mode) &
        @content

@mixin dark-theme
    @at-root :global(.dark-mode) &
        @content

=dark-body
    @at-root .dark-mode
        @content

=dark-common
    @at-root .dark-mode &
        @content

=rtl
    @at-root :global(.rtl) &
        @content

=rtl-body
    @at-root .rtl &
        @content

=ltr
    @at-root :global(.ltr) &
        @content
// a
$directions: ( rtl: ( right: left, left: right ), ltr: ( right: right, left: left ))
$symbols: ( rtl: ( "-": "+", "+": "-", ), ltr: ( "-": "-", "+": "+"),)
$prefixes: ("-webkit", "-ms", "-o")

@mixin transition($transition)
    @each $prefix in $prefixes
        #{$prefix}-transition: $transition

        transition: $transition

@mixin transform($transforms)
    @each $prefix in $prefixes
        #{$prefix}-transform: $transforms

        transform: $transforms

@mixin rotate($rotate)
    @include transform(rotate($rotate+deg))

// b
@mixin dir-aware($key, $dir,$value)
    @content
    @each $dir-name, $direction in $directions
        @at-root :global(.#{$dir-name}) &
            @if ($key)
                #{$key}-#{map-get(map-get($directions, $dir-name), $dir)}: $value
            @else
                #{map-get(map-get($directions, $dir-name), $dir)}: $value

@mixin dir-aware-class($key, $dir,$value)
    @each $dir-name, $direction in $directions
        .#{$dir-name} &
            @if ($key)
                #{$key}-#{map-get(map-get($directions, $dir-name), $dir)}: $value
            @else
                #{map-get(map-get($directions, $dir-name), $dir)}: $value

@mixin transform-aware($key, $value, $symb: "+")
    @each $symbol-name, $symbol in $symbols
        @at-root :global(.#{$symbol-name}) &
            @if ($key == "rotateY")
                @include transform(rotateY((#{map-get(map-get($symbols, $symbol-name), $symb)}$value)deg))
            @else if ($key == "translate")
                @include transform(translate((map-get(map-get($symbols, $symbol-name), $symb)$value)))
            @else if ($key == "translateY")
                @include transform(translateY((#{map-get(map-get($symbols, $symbol-name), $symb)}$value)))

@mixin center-all
    display: flex
    justify-content: center
    align-items: center

@mixin dis-flex
    display: -webkit-box
    display: -webkit-flex
    display: -moz-flex
    display: -ms-flexbox
    display: flex
    @content

@mixin inline-flex
    display: -webkit-inline-box
    display: -webkit-inline-flex
    display: -moz-inline-flex
    display: -ms-inline-flexbox
    display: inline-flex

@mixin flex($value)
    -webkit-flex: $value
    -webkit-box-flex: $value
    -moz-flex: $value
    -moz-box-flex: $value
    -ms-flex: $value
    flex: $value

@mixin flex-direction($value: row)
    @if $value == row-reverse
        -webkit-box-direction: reverse
        -webkit-box-orient: horizontal
    @else if $value == column
        -webkit-box-direction: normal
        -webkit-box-orient: vertical
    @else if $value == column-reverse
        -webkit-box-direction: reverse
        -webkit-box-orient: vertical
    @else
        -webkit-box-direction: normal
        -webkit-box-orient: horizontal

        -webkit-flex-direction: $value
        -moz-flex-direction: $value
        -ms-flex-direction: $value
        flex-direction: $value
